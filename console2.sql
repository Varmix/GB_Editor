DROP TABLE Choice;
DROP TABLE Page;
DROP TABLE Book;
DROP TABLE AUTHOR;

CREATE TABLE Author(
   matricule INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   prenom VARCHAR(255) NOT NULL,
   nom VARCHAR(255) NOT NULL,
   PRIMARY KEY(matricule)
);

CREATE TABLE Book(
   idBook INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   titre VARCHAR(150) NOT NULL,
   isbn VARCHAR(14) NOT NULL,
   resume VARCHAR(500) NOT NULL,
   estPublie BOOLEAN NOT NULL,
   matricule INT NOT NULL,
   PRIMARY KEY(idBook),
   UNIQUE(isbn),
   FOREIGN KEY(matricule) REFERENCES Author(matricule)
);

INSERT INTO Book(titre, isbn, resume, estPublie, idAuthor)  VALUES (?, ?, ?, ?, ?);

CREATE TABLE Page(
   idPage INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   numPage INT NOT NULL,
   textPage VARCHAR(550) NOT NULL,
   idBook INT NOT NULL,
   PRIMARY KEY(idPage),
   FOREIGN KEY(idBook) REFERENCES Book(idBook)
);

CREATE TABLE Choice(
   idChoice INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   texteAction VARCHAR(255) NOT NULL,
   numPageFrom INT NOT NULL,
   numPageTo INT NOT NULL,
   PRIMARY KEY(idChoice),
   FOREIGN KEY(numPageFrom) REFERENCES Page(idPage)
   on delete cascade,
   FOREIGN KEY(numPageTo) REFERENCES Page(idPage)
   on delete cascade
);


/* Load les livres basiques sur base du numéros de l'auteur */
SELECT b.idBook as idBook, b.titre as titre, b.isbn as isbn, b.resume as resume
FROM BOOK b
JOIN Author A on A.idAuthor = b.idAuthor
WHERE A.idAuthor = 1;

INSERT INTO Book (titre, isbn, resume, estPublie, matricule) VALUES ('123456789X1234567', '2-070038-01-4', 'aaaaa', false, 1);

/* Vérifier si un auteur existe en BD */
SELECT * FROM Author WHERE matricule = '210054'

/* Aller chercher les informations de l'auteur */
SELECT idAuthor as idAuthor, prenom as prenom, nom as nom
FROM AUTHOR
WHERE matricule = '210054';


UPDATE Book SET titre = "Salut", isbn = "2-210054-00-0", resume = "blablabla" WHERE idBook = 17;
UPDATE Book SET titre = ?, isbn = ?, resume = ? WHERE idBook = ?;


SELECT b.idBook as idBook, b.titre as titre, b.isbn as isbn, b.resume as resume
FROM BOOK b
JOIN Author A on A.idAuthor = b.idAuthor
WHERE A.idAuthor = 1;

--Insertion de pages
INSERT INTO Page (numPage, textePage, idBook )VALUES (1, 'Vous êtes plongés dans la lecture du journal', 1);
INSERT INTO Page (numPage, textePage, idBook )VALUES (2, 'Vous êtes plongés dans la lecture du journal', 1);

SELECT b.idBook as idBook, b.titre as titre, b.isbn as isbn, b.resume as resume, b.estPublie as isPublished
FROM BOOK b
WHERE b.idBook = 10;




